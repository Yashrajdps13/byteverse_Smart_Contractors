{"map":"{\"version\":3,\"sources\":[\"D:/New_Desktop/codeOnDemand/defi-staking-app-starter/src/components/App.js\",\"D:/New_Desktop/codeOnDemand/defi-staking-app-starter/src/serviceWorker.js\",\"D:/New_Desktop/codeOnDemand/defi-staking-app-starter/src/index.js\"],\"names\":[\"App\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"contract\",\"setContract\",\"_useState3\",\"_useState4\",\"person\",\"setPerson\",\"_useState5\",\"_useState6\",\"counter\",\"setCounter\",\"useEffect\",\"_ref\",\"asyncToGenerator\",\"regenerator_default\",\"a\",\"mark\",\"_callee\",\"web3\",\"contractAddress\",\"contractABI\",\"votingContract\",\"wrap\",\"_context\",\"prev\",\"next\",\"window\",\"ethereum\",\"enable\",\"Web3\",\"Voting\",\"networks\",\"address\",\"abi\",\"eth\",\"Contract\",\"stop\",\"apply\",\"this\",\"arguments\",\"init\",\"handleVoteClick\",\"_ref2\",\"_callee2\",\"newCounter\",\"_context2\",\"methods\",\"Vote\",\"send\",\"from\",\"selectedAddress\",\"call\",\"sent\",\"parseInt\",\"t0\",\"console\",\"error\",\"react_default\",\"createElement\",\"className\",\"onClick\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"components_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"q5hBA8NeA,IAAAA,EAvDf,WAAe,IAAAC,EAEiBC,OAAAA,EAAAA,SAAAA,CAAS,MAF1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAERK,EAFQH,EAAA,GAEEI,EAFFJ,EAAA,GAAAK,EAGaN,OAAAA,EAAAA,SAAAA,EAAS,GAHtBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGRE,EAHQD,EAAA,GAGAE,EAHAF,EAAA,GAAAG,EAIeV,OAAAA,EAAAA,SAAAA,CAAS,GAJxBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAIRE,EAJQD,EAAA,GAICE,EAJDF,EAAA,GAMbG,OAAAA,EAAAA,UAAAA,CAAU,YACE,WAAA,IAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,IAEPC,OAAOC,SAFA,CAAAJ,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAE,KAAA,EAGHC,OAAOC,SAASC,SAHb,KAAA,EAIHV,EAAO,IAAIW,EAAAA,EAAKH,OAAOC,UAGxBR,EAAkBW,EAAOC,SAAS,MAAMC,QACvCZ,EAAcU,EAAOG,IACrBZ,EAAiB,IAAIH,EAAKgB,IAAIC,SAASf,EAAaD,GAE1DjB,EAAYmB,GAXH,KAAA,EAAA,IAAA,MAAA,OAAAE,EAAAa,SAAAnB,MAAH,OAAA,WAAA,OAAAL,EAAAyB,MAAAC,KAAAC,YAAA,EAeVC,IACC,IAGH,IAAMC,EAAe,WAAA,IAAAC,EAAA3C,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAA2B,IAAA,IAAAC,EAAA,OAAA9B,EAAAC,EAAAO,KAAA,SAAAuB,GAAA,OAAA,OAAAA,EAAArB,KAAAqB,EAAApB,MAAA,KAAA,EAAA,OAAAoB,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAEdxB,EAAS6C,QAAQC,OAAOC,KAAK,CAAEC,KAAMvB,OAAOC,SAASuB,kBAFvC,KAAA,EAAA,OAAAL,EAAApB,KAAA,EAKKxB,EAAS6C,QAAQrC,UAAU0C,OALhC,KAAA,EAKdP,EALcC,EAAAO,KAMpB1C,EAAW2C,SAAST,EAAY,KAEb,KAAfA,GACFtC,GAAU,GATQuC,EAAApB,KAAA,GAAA,MAAA,KAAA,GAAAoB,EAAArB,KAAA,GAAAqB,EAAAS,GAAAT,EAAA,MAAA,GAYpBU,QAAQC,MAARX,EAAAS,IAZoB,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAT,SAAAO,EAAA,KAAA,CAAA,CAAA,EAAA,SAAH,OAAA,WAAA,OAAAD,EAAAL,MAAAC,KAAAC,YAAA,GAgBrB,OACEkB,EAAA1C,EAAA2C,cAAA,MAAA,CAAKC,UAAU,OACbF,EAAA1C,EAAA2C,cAAA,KAAA,KAAA,yBACAD,EAAA1C,EAAA2C,cAAA,IAAA,KAAA,YAAajD,GACZJ,EACCoD,EAAA1C,EAAA2C,cAAA,IAAA,KAAA,kCAEAD,EAAA1C,EAAA2C,cAAA,SAAA,CAAQE,QAASnB,GAAjB,UC5MYoB,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOT,EAAA1C,EAAA2C,cAACS,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"// import React, {Component, useState} from 'react';\\r\\n// import './App.css'\\r\\n// import Web3 from 'web3';\\r\\n// //import Tether from '../truffle_abis/Tether.json'// here we just bring up the contract.json which contains all the information about our contract and we call it further to gain access to that data\\r\\n\\r\\n// class App extends Component {\\r\\n\\r\\n//     async  UNSAFE_componentWillMount() {\\r\\n//         await this.loadWeb3();\\r\\n//         await this.loadBlockchainData();\\r\\n//     }\\r\\n\\r\\n//     async  loadWeb3() {\\r\\n//     if(window.ethereum) {\\r\\n//         window.web3 = new Web3(window.ethereum)// to check whether the browser has any account on the ethereum or not\\r\\n//         await window.ethereum.enable()\\r\\n//     } else if(window.web3) {\\r\\n//         window.web3 = new Web3(window.web3.currentProvider)// The code assigns a new Web3 instance to the window.web3 object, using the current provider object set by a browser extension like Metamask.\\r\\n//     }else {\\r\\n//         window.alert(\\\"No ethereum browser detected: You can check out MetaMask\\\")\\r\\n//     }\\r\\n// }\\r\\n// // loading web3 in our react-app\\r\\n//     async  loadBlockchainData() {\\r\\n//         const web3 = window.web3;\\r\\n//         const account = await web3.eth.getAccounts();// this just for fetching my account that I am using currently in the browser\\r\\n//         this.setState({account: account[0]})// here we have used setState to initailize the account form the array of account which is created by the \\\"web3.eth.getAccounts()\\\"\\r\\n//         console.log(\\\"here is my account\\\"+account);\\r\\n//         const networkId = await web3.eth.net.getId();// to get the networkId\\r\\n\\r\\n//         //load randomContractName  contract to your app\\r\\n//         //const tetherdata = Tether.networks[networkId];//but you can simply check that whether the contract is habing the above mentioned mentioned netwworkId or not? by just opening its JSON file in the \\\"contract_abis\\\"\\r\\n     \\r\\n//     }\\r\\n// //The state property is a way for React components to manage their internal state, which determines how they are rendered and updated.\\r\\n\\r\\n// // In this case, the component is initialized with an initial state of { account: '0x0' }, which means that the account property will initially be set to the string '0x0'. This state can be updated later by calling the setState method, which will trigger a re-render of the component.\\r\\n//     constructor(props) {\\r\\n//         super(props)\\r\\n//         this.state = {\\r\\n//             account: '0x0',// enertring random value for precerving the int type vacant variable to later use in mhy project \\r\\n//           //  tether: {},//creating empty objects for storing the object\\r\\n//         }\\r\\n//     }\\r\\n\\r\\n//     render() {\\r\\n//     return (\\r\\n//         <>\\r\\n//         <h1 className='text-center'>Jai mata di</h1>\\r\\n           \\r\\n//             </>  \\r\\n//     )\\r\\n//     }\\r\\n// }\\r\\n\\r\\n// export default App;\\r\\n\\r\\n\\r\\n//testing part---\\r\\n// import React, {Component, useState} from 'react';\\r\\n// import './App.css'\\r\\n// import Web3 from 'web3';\\r\\n// import Voting from '../truffle_abis/voting.json'// here we just bring up the contract.json which contains all the information about our contract and we call it further to gain access to that data\\r\\n\\r\\n// class App extends Component {\\r\\n\\r\\n\\r\\n\\r\\n//     async  UNSAFE_componentWillMount() {\\r\\n//                 await this.loadWeb3();\\r\\n//                 await this.loadBlockchainData();\\r\\n//             }\\r\\n        \\r\\n//             async  loadWeb3() {\\r\\n//             if(window.ethereum) {\\r\\n//                 window.web3 = new Web3(window.ethereum)// to check whether the browser has any account on the ethereum or not\\r\\n//                 await window.ethereum.enable()\\r\\n//             } else if(window.web3) {\\r\\n//                 window.web3 = new Web3(window.web3.currentProvider)// The code assigns a new Web3 instance to the window.web3 object, using the current provider object set by a browser extension like Metamask.\\r\\n//             }else {\\r\\n//                 window.alert(\\\"No ethereum browser detected: You can check out MetaMask\\\")\\r\\n//             }\\r\\n//         }\\r\\n//         // loading web3 in our react-app\\r\\n        \\r\\n//             async  loadBlockchainData() {\\r\\n//                 const web3 = window.web3;\\r\\n//                 const account = await web3.eth.getAccounts();// this just for fetching my account that I am using currently in the browser\\r\\n//                 this.setState({account: account[0]})// here we have used setState to initailize the account form the array of account which is created by the \\\"web3.eth.getAccounts()\\\"\\r\\n//                 console.log(\\\"here is my account\\\"+account);\\r\\n//                 const networkId = await web3.eth.net.getId();// to get the networkId\\r\\n//                // to get the networkId\\r\\n//                 console.log(`network id is ${networkId}`);\\r\\n        \\r\\n//                 //load Voting  contract to your app\\r\\n             \\r\\n//                 const votingData = Voting.networks[networkId];//but you can simply check that whether the contract is habing the above mentioned mentioned netwworkId or not? by just opening its JSON file in the \\\"contract_abis\\\"\\r\\n//                 // console.log(votingData.address);\\r\\n//                 if(votingData) {\\r\\n//                     const voting = new web3.eth.Contract( Voting.abi, votingData.address )\\r\\n                    \\r\\n//                     //  console.log(votingData.address);\\r\\n//                     this.setState({voting: voting});\\r\\n//                     let counter = await voting.methods.counter().call();\\r\\n//                     this.setState({counter: counter.toString() })\\r\\n//                     console.log({counter: counter})\\r\\n//                     // let person = await voting.methods.person.call();\\r\\n//                     // this.setState({person: person})// problem that wether it willl be converted to string or not\\r\\n                    \\r\\n                    \\r\\n//                 }\\r\\n//                 else{\\r\\n//                     console.log(`Error while loading the contract or either networkId has some Issues`)\\r\\n//                 }\\r\\n\\r\\n\\r\\n//                 this.setState({loading: false});\\r\\n//              }\\r\\n      \\r\\n         \\r\\n//         //The state property is a way for React components to manage their internal state, which determines how they are rendered and updated.\\r\\n        \\r\\n//         // In this case, the component is initialized with an initial state of { account: '0x0' }, which means that the account property will initially be set to the string '0x0'. This state can be updated later by calling the setState method, which will trigger a re-render of the component.\\r\\n//         constructor(props) {\\r\\n//                 super(props);\\r\\n//                 this.state = {\\r\\n//                     account: '0x0',// enertring random value for precerving the int type vacant variable to later use in mhy project \\r\\n//                    voting: {},//creating empty objects for storing the object\\r\\n//                    counter:'0',\\r\\n//                    person: 'false',\\r\\n//                    loading: true\\r\\n//                 }\\r\\n//             }\\r\\n        \\r\\n//             render() {\\r\\n                \\r\\n//              let content;\\r\\n                \\r\\n//                 {this.state.loading ? content= <p id=\\\"loader\\\" className='text-center' style={{margin:'30px'}} >Loading Please Wait....</p> : content= <div>\\r\\n//                <p> <button style={{margin:'2rem',}}> Vote</button></p>\\r\\n//                 <p><button  >count:  </button></p>\\r\\n//                 <p> {this.props.counter}</p>\\r\\n//                 <p>\\r\\n//                 <button>{this.props.person} person</button>\\r\\n//                 </p>\\r\\n                \\r\\n\\r\\n//             </div>}\\r\\n//             return (\\r\\n//                 <>\\r\\n//                 <div className='container-fluid mt-6'> \\r\\n//                 <div className='row'>\\r\\n//                     {content}\\r\\n//                      </div>\\r\\n//                 </div>\\r\\n//                     </>  \\r\\n//             )\\r\\n//             }\\r\\n//         }\\r\\n        \\r\\n//         export default App;\\r\\n        \\r\\nimport React, { useState, useEffect } from \\\"react\\\";\\r\\nimport Web3 from \\\"web3\\\";\\r\\nimport \\\"./App.css\\\";\\r\\nimport Voting from \\\"../truffle_abis/voting.json\\\"\\r\\n\\r\\nfunction App() {\\r\\n\\r\\nconst [contract, setContract] = useState(null);\\r\\nconst [person, setPerson] = useState(false);\\r\\nconst [counter, setCounter] = useState(0);\\r\\n  // Load the contract on component mount\\r\\n  useEffect(() => {\\r\\n    const init = async () => {\\r\\n      // Connect to Ethereum network\\r\\n      if (window.ethereum) {\\r\\n        await window.ethereum.enable();\\r\\n        const web3 = new Web3(window.ethereum);\\r\\n\\r\\n        // Load the contract\\r\\n       const contractAddress=  Voting.networks[5777].address;\\r\\n        const contractABI = Voting.abi;\\r\\n        const votingContract = new web3.eth.Contract(contractABI, contractAddress);\\r\\n\\r\\n        setContract(votingContract);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    init();\\r\\n  }, []);\\r\\n\\r\\n  // Handle the voting button click\\r\\n  const handleVoteClick = async () => {\\r\\n    try {\\r\\n      await contract.methods.Vote().send({ from: window.ethereum.selectedAddress });\\r\\n\\r\\n      // Update the state\\r\\n      const newCounter = await contract.methods.counter().call();\\r\\n      setCounter(parseInt(newCounter, 10));\\r\\n\\r\\n      if (newCounter === 10) {\\r\\n        setPerson(true);\\r\\n      }\\r\\n    } catch (err) {\\r\\n      console.error(err);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"App\\\">\\r\\n      <h1>Smart Contract Voting</h1>\\r\\n      <p>Counter: {counter}</p>\\r\\n      {person ? (\\r\\n        <p>The person has voted 10 times.</p>\\r\\n      ) : (\\r\\n        <button onClick={handleVoteClick}>Vote</button>\\r\\n      )}\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"// This optional code is used to register a service worker.\\r\\n// register() is not called by default.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on subsequent visits to a page, after all the\\r\\n// existing tabs open on the page have been closed, since previously cached\\r\\n// resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model and instructions on how to\\r\\n// opt-in, read https://bit.ly/CRA-PWA\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not localhost. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (installingWorker == null) {\\r\\n          return;\\r\\n        }\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the updated precached content has been fetched,\\r\\n              // but the previous service worker will still serve the older\\r\\n              // content until all client tabs are closed.\\r\\n              console.log(\\r\\n                'New content is available and will be used when all ' +\\r\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\r\\n              );\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport 'bootstrap/dist/css/bootstrap.css'\\r\\nimport App from './components/App';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\n\\r\\nReactDOM.render(<App />, document.getElementById('root'));\\r\\n\\r\\n\\r\\n// If you want your app to work offline and load faster, you can change\\r\\n// unregister() to register() below. Note this comes with some pitfalls.\\r\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\r\\nserviceWorker.unregister();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{101:function(e){e.exports={contractName:\"voting\",abi:[{constant:!0,inputs:[],name:\"counter\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"person\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[],name:\"Vote\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"}],metadata:'{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"Vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"person\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/voting_test1.sol\":\"voting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/voting_test1.sol\":{\"keccak256\":\"0x410a860103d5c7e0a35c069f181aaa689c81b52f842dce3561d34c2d35f3a496\",\"urls\":[\"bzz-raw://828ceeb426f5b84190e9e8e92b37718f7a69675744642f39916fe1dfa198cebc\",\"dweb:/ipfs/QmXSQCvfbGjmhhZfXyGdUbVgqdcxJuYkQW9Wb3mukSKhjC\"]}},\"version\":1}',bytecode:\"0x608060405260008060006101000a81548160ff021916908315150217905550600060015534801561002f57600080fd5b5061012b8061003f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806361bc221a1460415780636bf52ffa14605d57806377ec2b55146065575b600080fd5b60476085565b6040518082815260200191505060405180910390f35b6063608b565b005b606b60e4565b604051808215151515815260200191505060405180910390f35b60015481565b6000809054906101000a900460ff16600015158115151460aa57600080fd5b600160008154809291906001019190505550600a600154141560e15760016000806101000a81548160ff0219169083151502179055505b50565b6000809054906101000a900460ff168156fea265627a7a723158204dc08d8bb14a11e16fd6efb4d4d45d5b5c839669ddaad4735cd6e18a346c50a364736f6c63430005110032\",deployedBytecode:\"0x6080604052348015600f57600080fd5b5060043610603c5760003560e01c806361bc221a1460415780636bf52ffa14605d57806377ec2b55146065575b600080fd5b60476085565b6040518082815260200191505060405180910390f35b6063608b565b005b606b60e4565b604051808215151515815260200191505060405180910390f35b60015481565b6000809054906101000a900460ff16600015158115151460aa57600080fd5b600160008154809291906001019190505550600a600154141560e15760016000806101000a81548160ff0219169083151502179055505b50565b6000809054906101000a900460ff168156fea265627a7a723158204dc08d8bb14a11e16fd6efb4d4d45d5b5c839669ddaad4735cd6e18a346c50a364736f6c63430005110032\",sourceMap:\"63:344:2:-;;;135:5;114:26;;;;;;;;;;;;;;;;;;;;169:1;147:23;;63:344;8:9:-1;5:2;;;30:1;27;20:12;5:2;63:344:2;;;;;;;\",deployedSourceMap:\"63:344:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;63:344:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;147:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;270:132;;;:::i;:::-;;114:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;147:23;;;;:::o;270:132::-;301:6;;;;;;;;;;;238:5;228:15;;:6;:15;;;220:24;;;;;;320:7;;:9;;;;;;;;;;;;;355:2;344:7;;:13;340:55;;;379:4;370:6;;:13;;;;;;;;;;;;;;;;;;340:55;270:132;:::o;114:26::-;;;;;;;;;;;;;:::o\",source:\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity > 0.5.0;\\r\\n\\r\\ncontract voting{\\r\\n    //address private owner\\r\\n    bool public person = false;\\r\\n    uint public counter = 0;\\r\\n\\r\\n    modifier canVote(bool person) {\\r\\n        require(person == false);\\r\\n        _;\\r\\n    }\\r\\n    function Vote() public canVote(person) {\\r\\n        counter++;\\r\\n        if (counter == 10){ \\r\\n        person = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\",sourcePath:\"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\src\\\\contracts\\\\voting_test1.sol\",ast:{absolutePath:\"project:/src/contracts/voting_test1.sol\",exportedSymbols:{voting:[97]},id:98,nodeType:\"SourceUnit\",nodes:[{id:59,literals:[\"solidity\",\">\",\"0.5\",\".0\"],nodeType:\"PragmaDirective\",src:\"35:24:2\"},{baseContracts:[],contractDependencies:[],contractKind:\"contract\",documentation:null,fullyImplemented:!0,id:97,linearizedBaseContracts:[97],name:\"voting\",nodeType:\"ContractDefinition\",nodes:[{constant:!1,id:62,name:\"person\",nodeType:\"VariableDeclaration\",scope:97,src:\"114:26:2\",stateVariable:!0,storageLocation:\"default\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"},typeName:{id:60,name:\"bool\",nodeType:\"ElementaryTypeName\",src:\"114:4:2\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"}},value:{argumentTypes:null,hexValue:\"66616c7365\",id:61,isConstant:!1,isLValue:!1,isPure:!0,kind:\"bool\",lValueRequested:!1,nodeType:\"Literal\",src:\"135:5:2\",subdenomination:null,typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"},value:\"false\"},visibility:\"public\"},{constant:!1,id:65,name:\"counter\",nodeType:\"VariableDeclaration\",scope:97,src:\"147:23:2\",stateVariable:!0,storageLocation:\"default\",typeDescriptions:{typeIdentifier:\"t_uint256\",typeString:\"uint256\"},typeName:{id:63,name:\"uint\",nodeType:\"ElementaryTypeName\",src:\"147:4:2\",typeDescriptions:{typeIdentifier:\"t_uint256\",typeString:\"uint256\"}},value:{argumentTypes:null,hexValue:\"30\",id:64,isConstant:!1,isLValue:!1,isPure:!0,kind:\"number\",lValueRequested:!1,nodeType:\"Literal\",src:\"169:1:2\",subdenomination:null,typeDescriptions:{typeIdentifier:\"t_rational_0_by_1\",typeString:\"int_const 0\"},value:\"0\"},visibility:\"public\"},{body:{id:76,nodeType:\"Block\",src:\"209:55:2\",statements:[{expression:{argumentTypes:null,arguments:[{argumentTypes:null,commonType:{typeIdentifier:\"t_bool\",typeString:\"bool\"},id:72,isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,leftExpression:{argumentTypes:null,id:70,name:\"person\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:67,src:\"228:6:2\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"}},nodeType:\"BinaryOperation\",operator:\"==\",rightExpression:{argumentTypes:null,hexValue:\"66616c7365\",id:71,isConstant:!1,isLValue:!1,isPure:!0,kind:\"bool\",lValueRequested:!1,nodeType:\"Literal\",src:\"238:5:2\",subdenomination:null,typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"},value:\"false\"},src:\"228:15:2\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"}}],expression:{argumentTypes:[{typeIdentifier:\"t_bool\",typeString:\"bool\"}],id:69,name:\"require\",nodeType:\"Identifier\",overloadedDeclarations:[115,116],referencedDeclaration:115,src:\"220:7:2\",typeDescriptions:{typeIdentifier:\"t_function_require_pure$_t_bool_$returns$__$\",typeString:\"function (bool) pure\"}},id:73,isConstant:!1,isLValue:!1,isPure:!1,kind:\"functionCall\",lValueRequested:!1,names:[],nodeType:\"FunctionCall\",src:\"220:24:2\",typeDescriptions:{typeIdentifier:\"t_tuple$__$\",typeString:\"tuple()\"}},id:74,nodeType:\"ExpressionStatement\",src:\"220:24:2\"},{id:75,nodeType:\"PlaceholderStatement\",src:\"255:1:2\"}]},documentation:null,id:77,name:\"canVote\",nodeType:\"ModifierDefinition\",parameters:{id:68,nodeType:\"ParameterList\",parameters:[{constant:!1,id:67,name:\"person\",nodeType:\"VariableDeclaration\",scope:77,src:\"196:11:2\",stateVariable:!1,storageLocation:\"default\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"},typeName:{id:66,name:\"bool\",nodeType:\"ElementaryTypeName\",src:\"196:4:2\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"}},value:null,visibility:\"internal\"}],src:\"195:13:2\"},src:\"179:85:2\",visibility:\"internal\"},{body:{id:95,nodeType:\"Block\",src:\"309:93:2\",statements:[{expression:{argumentTypes:null,id:84,isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,nodeType:\"UnaryOperation\",operator:\"++\",prefix:!1,src:\"320:9:2\",subExpression:{argumentTypes:null,id:83,name:\"counter\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:65,src:\"320:7:2\",typeDescriptions:{typeIdentifier:\"t_uint256\",typeString:\"uint256\"}},typeDescriptions:{typeIdentifier:\"t_uint256\",typeString:\"uint256\"}},id:85,nodeType:\"ExpressionStatement\",src:\"320:9:2\"},{condition:{argumentTypes:null,commonType:{typeIdentifier:\"t_uint256\",typeString:\"uint256\"},id:88,isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,leftExpression:{argumentTypes:null,id:86,name:\"counter\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:65,src:\"344:7:2\",typeDescriptions:{typeIdentifier:\"t_uint256\",typeString:\"uint256\"}},nodeType:\"BinaryOperation\",operator:\"==\",rightExpression:{argumentTypes:null,hexValue:\"3130\",id:87,isConstant:!1,isLValue:!1,isPure:!0,kind:\"number\",lValueRequested:!1,nodeType:\"Literal\",src:\"355:2:2\",subdenomination:null,typeDescriptions:{typeIdentifier:\"t_rational_10_by_1\",typeString:\"int_const 10\"},value:\"10\"},src:\"344:13:2\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"}},falseBody:null,id:94,nodeType:\"IfStatement\",src:\"340:55:2\",trueBody:{id:93,nodeType:\"Block\",src:\"358:37:2\",statements:[{expression:{argumentTypes:null,id:91,isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,leftHandSide:{argumentTypes:null,id:89,name:\"person\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:62,src:\"370:6:2\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"}},nodeType:\"Assignment\",operator:\"=\",rightHandSide:{argumentTypes:null,hexValue:\"74727565\",id:90,isConstant:!1,isLValue:!1,isPure:!0,kind:\"bool\",lValueRequested:!1,nodeType:\"Literal\",src:\"379:4:2\",subdenomination:null,typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"},value:\"true\"},src:\"370:13:2\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"}},id:92,nodeType:\"ExpressionStatement\",src:\"370:13:2\"}]}}]},documentation:null,id:96,implemented:!0,kind:\"function\",modifiers:[{arguments:[{argumentTypes:null,id:80,name:\"person\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:62,src:\"301:6:2\",typeDescriptions:{typeIdentifier:\"t_bool\",typeString:\"bool\"}}],id:81,modifierName:{argumentTypes:null,id:79,name:\"canVote\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:77,src:\"293:7:2\",typeDescriptions:{typeIdentifier:\"t_modifier$_t_bool_$\",typeString:\"modifier (bool)\"}},nodeType:\"ModifierInvocation\",src:\"293:15:2\"}],name:\"Vote\",nodeType:\"FunctionDefinition\",parameters:{id:78,nodeType:\"ParameterList\",parameters:[],src:\"283:2:2\"},returnParameters:{id:82,nodeType:\"ParameterList\",parameters:[],src:\"309:0:2\"},scope:97,src:\"270:132:2\",stateMutability:\"nonpayable\",superFunction:null,visibility:\"public\"}],scope:98,src:\"63:344:2\"}],src:\"35:372:2\"},legacyAST:{attributes:{absolutePath:\"project:/src/contracts/voting_test1.sol\",exportedSymbols:{voting:[97]}},children:[{attributes:{literals:[\"solidity\",\">\",\"0.5\",\".0\"]},id:59,name:\"PragmaDirective\",src:\"35:24:2\"},{attributes:{baseContracts:[null],contractDependencies:[null],contractKind:\"contract\",documentation:null,fullyImplemented:!0,linearizedBaseContracts:[97],name:\"voting\",scope:98},children:[{attributes:{constant:!1,name:\"person\",scope:97,stateVariable:!0,storageLocation:\"default\",type:\"bool\",visibility:\"public\"},children:[{attributes:{name:\"bool\",type:\"bool\"},id:60,name:\"ElementaryTypeName\",src:\"114:4:2\"},{attributes:{argumentTypes:null,hexvalue:\"66616c7365\",isConstant:!1,isLValue:!1,isPure:!0,lValueRequested:!1,subdenomination:null,token:\"bool\",type:\"bool\",value:\"false\"},id:61,name:\"Literal\",src:\"135:5:2\"}],id:62,name:\"VariableDeclaration\",src:\"114:26:2\"},{attributes:{constant:!1,name:\"counter\",scope:97,stateVariable:!0,storageLocation:\"default\",type:\"uint256\",visibility:\"public\"},children:[{attributes:{name:\"uint\",type:\"uint256\"},id:63,name:\"ElementaryTypeName\",src:\"147:4:2\"},{attributes:{argumentTypes:null,hexvalue:\"30\",isConstant:!1,isLValue:!1,isPure:!0,lValueRequested:!1,subdenomination:null,token:\"number\",type:\"int_const 0\",value:\"0\"},id:64,name:\"Literal\",src:\"169:1:2\"}],id:65,name:\"VariableDeclaration\",src:\"147:23:2\"},{attributes:{documentation:null,name:\"canVote\",visibility:\"internal\"},children:[{children:[{attributes:{constant:!1,name:\"person\",scope:77,stateVariable:!1,storageLocation:\"default\",type:\"bool\",value:null,visibility:\"internal\"},children:[{attributes:{name:\"bool\",type:\"bool\"},id:66,name:\"ElementaryTypeName\",src:\"196:4:2\"}],id:67,name:\"VariableDeclaration\",src:\"196:11:2\"}],id:68,name:\"ParameterList\",src:\"195:13:2\"},{children:[{children:[{attributes:{argumentTypes:null,isConstant:!1,isLValue:!1,isPure:!1,isStructConstructorCall:!1,lValueRequested:!1,names:[null],type:\"tuple()\",type_conversion:!1},children:[{attributes:{argumentTypes:[{typeIdentifier:\"t_bool\",typeString:\"bool\"}],overloadedDeclarations:[115,116],referencedDeclaration:115,type:\"function (bool) pure\",value:\"require\"},id:69,name:\"Identifier\",src:\"220:7:2\"},{attributes:{argumentTypes:null,commonType:{typeIdentifier:\"t_bool\",typeString:\"bool\"},isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,operator:\"==\",type:\"bool\"},children:[{attributes:{argumentTypes:null,overloadedDeclarations:[null],referencedDeclaration:67,type:\"bool\",value:\"person\"},id:70,name:\"Identifier\",src:\"228:6:2\"},{attributes:{argumentTypes:null,hexvalue:\"66616c7365\",isConstant:!1,isLValue:!1,isPure:!0,lValueRequested:!1,subdenomination:null,token:\"bool\",type:\"bool\",value:\"false\"},id:71,name:\"Literal\",src:\"238:5:2\"}],id:72,name:\"BinaryOperation\",src:\"228:15:2\"}],id:73,name:\"FunctionCall\",src:\"220:24:2\"}],id:74,name:\"ExpressionStatement\",src:\"220:24:2\"},{id:75,name:\"PlaceholderStatement\",src:\"255:1:2\"}],id:76,name:\"Block\",src:\"209:55:2\"}],id:77,name:\"ModifierDefinition\",src:\"179:85:2\"},{attributes:{documentation:null,implemented:!0,isConstructor:!1,kind:\"function\",name:\"Vote\",scope:97,stateMutability:\"nonpayable\",superFunction:null,visibility:\"public\"},children:[{attributes:{parameters:[null]},children:[],id:78,name:\"ParameterList\",src:\"283:2:2\"},{attributes:{parameters:[null]},children:[],id:82,name:\"ParameterList\",src:\"309:0:2\"},{children:[{attributes:{argumentTypes:null,overloadedDeclarations:[null],referencedDeclaration:77,type:\"modifier (bool)\",value:\"canVote\"},id:79,name:\"Identifier\",src:\"293:7:2\"},{attributes:{argumentTypes:null,overloadedDeclarations:[null],referencedDeclaration:62,type:\"bool\",value:\"person\"},id:80,name:\"Identifier\",src:\"301:6:2\"}],id:81,name:\"ModifierInvocation\",src:\"293:15:2\"},{children:[{children:[{attributes:{argumentTypes:null,isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,operator:\"++\",prefix:!1,type:\"uint256\"},children:[{attributes:{argumentTypes:null,overloadedDeclarations:[null],referencedDeclaration:65,type:\"uint256\",value:\"counter\"},id:83,name:\"Identifier\",src:\"320:7:2\"}],id:84,name:\"UnaryOperation\",src:\"320:9:2\"}],id:85,name:\"ExpressionStatement\",src:\"320:9:2\"},{attributes:{falseBody:null},children:[{attributes:{argumentTypes:null,commonType:{typeIdentifier:\"t_uint256\",typeString:\"uint256\"},isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,operator:\"==\",type:\"bool\"},children:[{attributes:{argumentTypes:null,overloadedDeclarations:[null],referencedDeclaration:65,type:\"uint256\",value:\"counter\"},id:86,name:\"Identifier\",src:\"344:7:2\"},{attributes:{argumentTypes:null,hexvalue:\"3130\",isConstant:!1,isLValue:!1,isPure:!0,lValueRequested:!1,subdenomination:null,token:\"number\",type:\"int_const 10\",value:\"10\"},id:87,name:\"Literal\",src:\"355:2:2\"}],id:88,name:\"BinaryOperation\",src:\"344:13:2\"},{children:[{children:[{attributes:{argumentTypes:null,isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,operator:\"=\",type:\"bool\"},children:[{attributes:{argumentTypes:null,overloadedDeclarations:[null],referencedDeclaration:62,type:\"bool\",value:\"person\"},id:89,name:\"Identifier\",src:\"370:6:2\"},{attributes:{argumentTypes:null,hexvalue:\"74727565\",isConstant:!1,isLValue:!1,isPure:!0,lValueRequested:!1,subdenomination:null,token:\"bool\",type:\"bool\",value:\"true\"},id:90,name:\"Literal\",src:\"379:4:2\"}],id:91,name:\"Assignment\",src:\"370:13:2\"}],id:92,name:\"ExpressionStatement\",src:\"370:13:2\"}],id:93,name:\"Block\",src:\"358:37:2\"}],id:94,name:\"IfStatement\",src:\"340:55:2\"}],id:95,name:\"Block\",src:\"309:93:2\"}],id:96,name:\"FunctionDefinition\",src:\"270:132:2\"}],id:97,name:\"ContractDefinition\",src:\"63:344:2\"}],id:98,name:\"SourceUnit\",src:\"35:372:2\"},compiler:{name:\"solc\",version:\"0.5.17+commit.d19bba13.Emscripten.clang\"},networks:{5777:{events:{},links:{},address:\"0x4aFe3F19bFa8E1F770F150Ea9Fb824E72d233fBd\",transactionHash:\"0xcd9369b78a9ebe389a33688187688c7dbf80bb4f194f983e6d0919f86eccc722\"}},schemaVersion:\"3.4.13\",updatedAt:\"2023-04-13T01:12:15.857Z\",networkType:\"ethereum\",devdoc:{methods:{}},userdoc:{methods:{}}}},195:function(e,t,n){e.exports=n(478)},215:function(e,t){},224:function(e,t){},241:function(e,t){},243:function(e,t){},257:function(e,t){},258:function(e,t){},260:function(e,t){},261:function(e,t){},336:function(e,t){},338:function(e,t){},370:function(e,t){},372:function(e,t){},377:function(e,t){},379:function(e,t){},386:function(e,t){},387:function(e,t){},389:function(e,t){},401:function(e,t){},404:function(e,t){},409:function(e,t){},420:function(e,t){},423:function(e,t){},475:function(e,t,n){},478:function(e,t,n){\"use strict\";n.r(t);var i=n(16),a=n.n(i),r=n(192),o=n.n(r),s=(n(200),n(19)),l=n.n(s),u=n(99),c=n(65),d=n(193),p=n.n(d),y=(n(475),n(101));var b=function(){var e=Object(i.useState)(null),t=Object(c.a)(e,2),n=t[0],r=t[1],o=Object(i.useState)(!1),s=Object(c.a)(o,2),d=s[0],b=s[1],m=Object(i.useState)(0),f=Object(c.a)(m,2),g=f[0],v=f[1];Object(i.useEffect)(function(){!function(){var e=Object(u.a)(l.a.mark(function e(){var t,n,i,a;return l.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!window.ethereum){e.next=8;break}return e.next=3,window.ethereum.enable();case 3:t=new p.a(window.ethereum),n=y.networks[5777].address,i=y.abi,a=new t.eth.Contract(i,n),r(a);case 8:case\"end\":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}()()},[]);var T=function(){var e=Object(u.a)(l.a.mark(function e(){var t;return l.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,n.methods.Vote().send({from:window.ethereum.selectedAddress});case 3:return e.next=5,n.methods.counter().call();case 5:t=e.sent,v(parseInt(t,10)),10===t&&b(!0),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),console.error(e.t0);case 13:case\"end\":return e.stop()}},e,null,[[0,10]])}));return function(){return e.apply(this,arguments)}}();return a.a.createElement(\"div\",{className:\"App\"},a.a.createElement(\"h1\",null,\"Smart Contract Voting\"),a.a.createElement(\"p\",null,\"Counter: \",g),d?a.a.createElement(\"p\",null,\"The person has voted 10 times.\"):a.a.createElement(\"button\",{onClick:T},\"Vote\"))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(a.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[195,2,1]]]);","extractedComments":[]}