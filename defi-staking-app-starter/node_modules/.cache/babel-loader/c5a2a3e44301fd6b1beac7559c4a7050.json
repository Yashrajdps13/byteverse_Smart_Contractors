{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\nexport default function App() {\n  function loadWeb3() {\n    return _loadWeb.apply(this, arguments);\n  }\n\n  function _loadWeb() {\n    _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum); // to check whether the browser has any account on the ethereum or not\n\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider); // The code assigns a new Web3 instance to the window.web3 object, using the current provider object set by a browser extension like Metamask.\n              } else {\n                window.alert(\"No ethereum browser detected: You can check out MetaMask\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadWeb.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Jai mata di\");\n}","map":{"version":3,"sources":["D:/New_Desktop/codeOnDemand/defi-staking-app-starter/src/components/App.js"],"names":["React","useState","Web3","App","loadWeb3","window","ethereum","web3","enable","currentProvider","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,WAIXC,QAJW;AAAA;AAAA;;AAAA;AAAA,wEAI1B;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGC,MAAM,CAACC,QADV;AAAA;AAAA;AAAA;;AAEID,cAAAA,MAAM,CAACE,IAAP,GAAc,IAAIL,IAAJ,CAASG,MAAM,CAACC,QAAhB,CAAd,CAFJ,CAE2C;;AAF3C;AAAA,qBAGUD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAHV;;AAAA;AAAA;AAAA;;AAAA;AAIO,kBAAGH,MAAM,CAACE,IAAV,EAAgB;AACnBF,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIL,IAAJ,CAASG,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd,CADmB,CACgC;AACtD,eAFM,MAED;AACFJ,gBAAAA,MAAM,CAACK,KAAP,CAAa,0DAAb;AACH;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJ0B;AAAA;AAAA;;AAc1B,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ;AAIH","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css'\r\nimport Web3 from 'web3';\r\n\r\nexport default function App() {\r\n\r\n    \r\n\r\n    async function loadWeb3() {\r\n    if(window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum)// to check whether the browser has any account on the ethereum or not\r\n        await window.ethereum.enable()\r\n    } else if(window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider)// The code assigns a new Web3 instance to the window.web3 object, using the current provider object set by a browser extension like Metamask.\r\n    }else {\r\n        window.alert(\"No ethereum browser detected: You can check out MetaMask\")\r\n    }\r\n}\r\n    return (\r\n        <h1>Jai mata di</h1>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}