{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport Web3 from 'web3';\nimport Voting from '../truffle_abis/voting.json'; // here we just bring up the contract.json which contains all the information about our contract and we call it further to gain access to that data\n\nexport default function App() {\n  var votingContract;\n  var userAccount;\n\n  function startApp() {\n    return _startApp.apply(this, arguments);\n  }\n\n  function _startApp() {\n    _startApp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                console.log(\"No ethereum browser detected: You can check out MetaMask\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _startApp.apply(this, arguments);\n  }\n\n  function loadingBlockchainData() {\n    return _loadingBlockchainData.apply(this, arguments);\n  }\n\n  function _loadingBlockchainData() {\n    _loadingBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3 = window.we;\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _loadingBlockchainData.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"hello world\"));\n}","map":{"version":3,"sources":["D:/New_Desktop/codeOnDemand/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","useState","ReactDOM","Web3","Voting","App","votingContract","userAccount","startApp","window","ethereum","web3","enable","currentProvider","console","log","loadingBlockchainData","we"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CAAgD;;AAEhD,eAAe,SAASC,GAAT,GAAe;AACtB,MAAIC,cAAJ;AACA,MAAIC,WAAJ;;AAFsB,WAIPC,QAJO;AAAA;AAAA;;AAAA;AAAA,yEAItB;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeC,MAAM,CAACC,QADtB;AAAA;AAAA;AAAA;;AAEeD,cAAAA,MAAM,CAACE,IAAP,GAAc,IAAIR,IAAJ,CAASM,MAAM,CAACC,QAAhB,CAAd;AAFf;AAAA,qBAGqBD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAHrB;;AAAA;AAAA;AAAA;;AAAA;AAImB,kBAAGH,MAAM,CAACE,IAAV,EAAgB;AAClBF,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIR,IAAJ,CAASM,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACJ,eAFM,MAED;AACFC,gBAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ;AACH;;AARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJsB;AAAA;AAAA;;AAAA,WAcCC,qBAdD;AAAA;AAAA;;AAAA;AAAA,sFAcd;AAAA;AAAA;AAAA;AAAA;AAAA;AACUL,cAAAA,IADV,GACgBF,MAAM,CAACQ,EADvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdc;AAAA;AAAA;;AAkBtB,sBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CADJ;AAKN","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css'\r\nimport Web3 from 'web3';\r\nimport Voting from '../truffle_abis/voting.json'// here we just bring up the contract.json which contains all the information about our contract and we call it further to gain access to that data\r\n\r\nexport default function App() {\r\n        var votingContract;\r\n        var userAccount;\r\n\r\n        async function startApp(){\r\n                    if(window.ethereum){\r\n                       window.web3 = new Web3(window.ethereum);\r\n                       await window.ethereum.enable();     \r\n                    } else if(window.web3) {\r\n                         window.web3 = new Web3(window.web3.currentProvider)\r\n                    }else {\r\n                        console.log(\"No ethereum browser detected: You can check out MetaMask\")\r\n                    }                \r\n                }\r\n                async function loadingBlockchainData() {\r\n                    const web3= window.we\r\n                }\r\n    \r\n        return(\r\n            <>\r\n            <h1>hello world</h1>\r\n            </>\r\n        )\r\n }"]},"metadata":{},"sourceType":"module"}