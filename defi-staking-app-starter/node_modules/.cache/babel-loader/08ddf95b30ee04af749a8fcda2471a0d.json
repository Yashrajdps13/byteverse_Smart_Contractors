{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\New_Desktop\\\\codeOnDemand\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum); // to check whether the browser has any account on the ethereum or not\n\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider); // The code assigns a new Web3 instance to the window.web3 object, using the current provider object set by a browser extension like Metamask.\n                } else {\n                  window.alert(\"No ethereum browser detected: You can check out MetaMask\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                // this just for fetching my account that I am using currently in the browser\n                console.log(account);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, \"Jai mata di\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: \"{UNSAFE_componentWillMount}\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, \"click me\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:/New_Desktop/codeOnDemand/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","useState","Web3","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","console","log","props","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,G;;;;;;;;;;;;uBAGQ,KAAKC,QAAL,E;;;;uBACF,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;qBAILC,MAAM,CAACC,Q;;;;;AACND,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIN,IAAJ,CAASI,MAAM,CAACC,QAAhB,CAAd,C,CAAuC;;;uBACjCD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AACH,oBAAGH,MAAM,CAACE,IAAV,EAAgB;AACnBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIN,IAAJ,CAASI,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd,CADmB,CACgC;AACtD,iBAFM,MAED;AACFJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,0DAAb;AACH;;;;;;;;;;;;;;;;;;;;;;;;;AAISH,gBAAAA,I,GAAOF,MAAM,CAACE,I;;uBACEA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAhBC,gBAAAA,O;AAAuC;AAC7CC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;;;;;;;;;;;;;;;;;AAGJ,eAAYG,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTJ,MAAAA,OAAO,EAAE;AADA,KAAb;AAFe;AAKlB;;;;6BAEQ;AACT,0BACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEI;AAAQ,QAAA,OAAO,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ;AAMC;;;;EAtCad,S;;AAyClB,eAAeG,GAAf","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport './App.css'\r\nimport Web3 from 'web3';\r\n\r\nclass App extends Component {\r\n\r\n    async  UNSAFE_componentWillMount() {\r\n        await this.loadWeb3();\r\n      await this.loadBlockchainData();\r\n    }\r\n\r\n    async  loadWeb3() {\r\n    if(window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum)// to check whether the browser has any account on the ethereum or not\r\n        await window.ethereum.enable()\r\n    } else if(window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider)// The code assigns a new Web3 instance to the window.web3 object, using the current provider object set by a browser extension like Metamask.\r\n    }else {\r\n        window.alert(\"No ethereum browser detected: You can check out MetaMask\")\r\n    }\r\n}\r\n\r\n    async  loadBlockchainData() {\r\n        const web3 = window.web3;\r\n        const account = await web3.eth.getAccounts();// this just for fetching my account that I am using currently in the browser\r\n        console.log(account);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0'\r\n        }\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <>\r\n        <h1>Jai mata di</h1>\r\n            <button onClick=\"{UNSAFE_componentWillMount}\">click me</button>\r\n            </>  \r\n    )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}